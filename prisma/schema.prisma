// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

generator zod {
    provider                         = "zod-prisma-types"
    output                           = "./generated/zod"
    useMultipleFiles                 = true // default is false
    writeBarrelFiles                 = true // default is true
    createInputTypes                 = true // default is true
    createModelTypes                 = true // default is true
    addInputTypeValidation           = true // default is true
    addIncludeType                   = true // default is true
    addSelectType                    = true // default is true
    validateWhereUniqueInput         = true // default is true
    createOptionalDefaultValuesTypes = true // default is false
    createRelationValuesTypes        = true // default is false
    createPartialTypes               = true // default is false
    useDefaultValidators             = true // default is true
    coerceDate                       = true // default is true
    writeNullishInModelTypes         = true // default is false
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Task {
    id          Int       @id @default(autoincrement())
    title       String
    description String?
    // status      TaskStatus @default(TODO)
    completed   Boolean   @default(false)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    // category    Category  @relation(fields: [categoryId], references: [id])
    // categoryId  Int
    tags        Tag[]     @relation("TaskToTag")
    startDate   DateTime?
    endDate     DateTime?
    dueDate     DateTime?

    @@index([title])
    // @@index([status])
    // @@index([categoryId])
    @@index([startDate])
    @@index([endDate])
    @@index([dueDate])
}

// model Category {
//     id    Int    @id @default(autoincrement())
//     name  String @unique
//     tasks Task[]
// }

model Tag {
    id    Int    @id @default(autoincrement())
    name  String @unique
    tasks Task[] @relation("TaskToTag")
}

// enum TaskStatus {
//     TODO
//     IN_PROGRESS
//     DONE
// }
